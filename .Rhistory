#library(methods)
library(DBI)
#The DBI package defines a common interface between the R and DBMS.
#The interface defines a small set of classes and methods similar to JDBC of JAVA
library(RMySQL)
#library(shiny)
#library(RWeka)
#library(rJava)
#library(datasets)
#library(tree)
#library(randomForest)
name<-"xyz"
age<-18
marks<-95
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- paste("INSERT into table(age,id,name,marks) VALUES ('",age,"',' ','",name,"','",marks,"');", sep = "")
#To retrieve data from the database we need to save a results set object.
rs<-dbSendQuery(con,sql_command)
#to access the results in R we need to use the fetch function.
df<- fetch(rs,n=-1)
all_cons <- dbListConnections(MySQL())
dbClearResult(rs)
for(con in all_cons)
dbDisconnect(con)
#-------------------------------------------------------
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- "SELECT id,name,age,marks FROM table"
rs<-dbSendQuery(con,sql_command)
df<- fetch(rs,n=-1)
df
#all_cons <- dbListConnections(MySQL())
#dbClearResult(rs)
#for(con in all_cons)
# dbDisconnect(con)
#library(methods)
library(DBI)
#The DBI package defines a common interface between the R and DBMS.
#The interface defines a small set of classes and methods similar to JDBC of JAVA
library(RMySQL)
#library(shiny)
#library(RWeka)
#library(rJava)
#library(datasets)
#library(tree)
#library(randomForest)
name<-"xyz"
age<-18
marks<-95
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- paste("INSERT into table(age,id,name,marks) VALUES ('",age,"',' ','",name,"','",marks,"');", sep = "")
#To retrieve data from the database we need to save a results set object.
rs<-dbSendQuery(con,sql_command)
#to access the results in R we need to use the fetch function.
df<- fetch(rs,n=-1)
all_cons <- dbListConnections(MySQL())
dbClearResult(rs)
for(con in all_cons)
dbDisconnect(con)
#-------------------------------------------------------
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- "SELECT id,name,age,marks FROM table"
data <- dbGetQuery(con, sql_command)
#rs<-dbSendQuery(con,sql_command)
#df<- fetch(rs,n=-1)
data
#all_cons <- dbListConnections(MySQL())
#dbClearResult(rs)
#for(con in all_cons)
# dbDisconnect(con)
#library(methods)
library(DBI)
#The DBI package defines a common interface between the R and DBMS.
#The interface defines a small set of classes and methods similar to JDBC of JAVA
library(RMySQL)
#library(shiny)
#library(RWeka)
#library(rJava)
#library(datasets)
#library(tree)
#library(randomForest)
name<-"xyz"
age<-18
marks<-95
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- paste("INSERT into table(age,id,name,marks) VALUES ('",age,"',' ','",name,"','",marks,"');", sep = "")
#To retrieve data from the database we need to save a results set object.
rs<-dbSendQuery(con,sql_command)
#to access the results in R we need to use the fetch function.
df<- fetch(rs,n=-1)
all_cons <- dbListConnections(MySQL())
dbClearResult(rs)
for(con in all_cons)
dbDisconnect(con)
#-------------------------------------------------------
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- "SELECT t.id,t.name,t.age,t.marks FROM table t"
data <- dbGetQuery(con, sql_command)
#rs<-dbSendQuery(con,sql_command)
#df<- fetch(rs,n=-1)
data
#all_cons <- dbListConnections(MySQL())
#dbClearResult(rs)
#for(con in all_cons)
# dbDisconnect(con)
#library(methods)
library(DBI)
#The DBI package defines a common interface between the R and DBMS.
#The interface defines a small set of classes and methods similar to JDBC of JAVA
library(RMySQL)
#library(shiny)
#library(RWeka)
#library(rJava)
#library(datasets)
#library(tree)
#library(randomForest)
name<-"xyz"
age<-18
marks<-95
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- paste("INSERT into table(age,id,name,marks) VALUES ('",age,"',' ','",name,"','",marks,"');", sep = "")
#To retrieve data from the database we need to save a results set object.
rs<-dbSendQuery(con,sql_command)
#to access the results in R we need to use the fetch function.
df<- fetch(rs,n=-1)
all_cons <- dbListConnections(MySQL())
dbClearResult(rs)
for(con in all_cons)
dbDisconnect(con)
#-------------------------------------------------------
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- "SELECT %s FROM table t"
data <- dbGetQuery(con, sql_command)
#rs<-dbSendQuery(con,sql_command)
#df<- fetch(rs,n=-1)
dbDisconnect(con)
data
#all_cons <- dbListConnections(MySQL())
#dbClearResult(rs)
#for(con in all_cons)
# dbDisconnect(con)
#library(methods)
library(DBI)
#The DBI package defines a common interface between the R and DBMS.
#The interface defines a small set of classes and methods similar to JDBC of JAVA
library(RMySQL)
#library(shiny)
#library(RWeka)
#library(rJava)
#library(datasets)
#library(tree)
#library(randomForest)
name<-"xyz"
age<-18
marks<-95
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- paste("INSERT into table(age,id,name,marks) VALUES ('",age,"',' ','",name,"','",marks,"');", sep = "")
#To retrieve data from the database we need to save a results set object.
rs<-dbSendQuery(con,sql_command)
#to access the results in R we need to use the fetch function.
df<- fetch(rs,n=-1)
all_cons <- dbListConnections(MySQL())
dbClearResult(rs)
for(con in all_cons)
dbDisconnect(con)
#-------------------------------------------------------
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- "SELECT %s FROM table"
data <- dbGetQuery(con, sql_command)
#rs<-dbSendQuery(con,sql_command)
#df<- fetch(rs,n=-1)
dbDisconnect(con)
data
#all_cons <- dbListConnections(MySQL())
#dbClearResult(rs)
#for(con in all_cons)
# dbDisconnect(con)
#library(methods)
library(DBI)
#The DBI package defines a common interface between the R and DBMS.
#The interface defines a small set of classes and methods similar to JDBC of JAVA
library(RMySQL)
#library(shiny)
#library(RWeka)
#library(rJava)
library(datasets)
#library(tree)
#library(randomForest)
name<-"xyz"
age<-18
marks<-95
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- paste("INSERT into table(age,id,name,marks) VALUES ('",age,"',' ','",name,"','",marks,"');", sep = "")
#To retrieve data from the database we need to save a results set object.
rs<-dbSendQuery(con,sql_command)
#to access the results in R we need to use the fetch function.
df<- fetch(rs,n=-1)
all_cons <- dbListConnections(MySQL())
dbClearResult(rs)
for(con in all_cons)
dbDisconnect(con)
#-------------------------------------------------------
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- "SELECT %s FROM table"
data <- dbGetQuery(con, sql_command)
#rs<-dbSendQuery(con,sql_command)
#df<- fetch(rs,n=-1)
dbDisconnect(con)
data
#all_cons <- dbListConnections(MySQL())
#dbClearResult(rs)
#for(con in all_cons)
# dbDisconnect(con)
library(methods)
library(DBI)
#The DBI package defines a common interface between the R and DBMS.
#The interface defines a small set of classes and methods similar to JDBC of JAVA
library(RMySQL)
#library(shiny)
#library(RWeka)
#library(rJava)
library(datasets)
#library(tree)
#library(randomForest)
name<-"xyz"
age<-18
marks<-95
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- paste("INSERT into table(age,id,name,marks) VALUES ('",age,"',' ','",name,"','",marks,"');", sep = "")
#To retrieve data from the database we need to save a results set object.
rs<-dbSendQuery(con,sql_command)
#to access the results in R we need to use the fetch function.
df<- fetch(rs,n=-1)
all_cons <- dbListConnections(MySQL())
dbClearResult(rs)
for(con in all_cons)
dbDisconnect(con)
#-------------------------------------------------------
con <- dbConnect(MySQL(), user="root",dbname="form")
dbExistsTable(con, "table")
sql_command <- "SELECT %s FROM table"
data <- dbGetQuery(con, sql_command)
#rs<-dbSendQuery(con,sql_command)
#df<- fetch(rs,n=-1)
dbDisconnect(con)
data
#all_cons <- dbListConnections(MySQL())
#dbClearResult(rs)
#for(con in all_cons)
# dbDisconnect(con)
library(methods)
library(DBI)
library(RMySQL)
library(shiny)
library(RWeka)
install.packages("rJava")
install.packages("RWeka")
library(Rweka)
library(RWeka)
sudo R CMD javareconf
